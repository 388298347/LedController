name: "pre-release"

on:
  push:
    branches:
      - "master"

jobs:
  doxygen:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: install dependencies
      run: sudo apt install doxygen graphviz
    - name: generate docs
      run: doxygen
    - name: Deploy
      uses: s0/git-publish-subdir-action@master
      env:
        REPO: self
        BRANCH: gh-pages
        FOLDER: doc/html
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  pre-release:
    name: "Pre Release latest"
    runs-on: "ubuntu-latest"
    env:
      color: '\033[0;33m'
      clear_color: '\033[0m'
    steps:
      - uses: actions/checkout@v1
      - name: install platform io
        run: | 
          pip install -U wheel
          pip install -U platformio
          python -m platformio update
      - name: build and test Demo Rocket
        run: |
          export PLATFORMIO_CI_SRC="examples/LedControllerDemoRocket/LedControllerDemoRocket.ino"
          
          echo "${color} Testing esp32dev ${clear_color}"
          python -m platformio ci --lib="." --board=esp32dev

          echo "${color} Testing d1_mini ${clear_color}"
          python -m platformio ci --lib="." --board=d1_mini

      - name: build and test Demo Counting
        run: |
          export PLATFORMIO_CI_SRC="examples/LedControllerDemoCounting/LedControllerDemoCounting.ino"
          
          echo "${color} Testing esp32dev ${clear_color}"
          python -m platformio ci --lib="." --board=esp32dev

          echo "${color} Testing d1_mini ${clear_color}"
          python -m platformio ci --lib="." --board=d1_mini

      - name: build and test Demo Rocket
        run: |
          export PLATFORMIO_CI_SRC="examples/LedControllerDemoHwSPI/LedControllerDemoHwSPI.ino"

          echo "${color} Testing esp32dev ${clear_color}"
          python -m platformio ci --lib="." --board=esp32dev

          echo "${color} Testing d1_mini ${clear_color}"
          python -m platformio ci --lib="." --board=d1_mini

      - name: pack repo
        run: |
          zip -r latest.zip src License README.md library.properties keywords.txt .vscode examples
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            License
            latest.zip